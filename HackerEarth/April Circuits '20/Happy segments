/* Author : A110011 - 00:19 -6-13-9-4 "Code In Hard Way" 

This one is sqrt decomposition algorithm with Q*sqrt(N) time-complexity, got TLE except 4 test cases :D

*/
 
#include<bits/stdc++.h>
 
#define setbits(x)      __builtin_popcountll(x)
#define zrobits(x)      __builtin_ctzll(x)
#define mod             1000000007
#define inf             1e18
#define sp(x,y)         fixed<<setprecision(y)<<x
typedef long long int ll;
 
using namespace std;
 
int findMin(int &l,int &r,int &bs,vector<int> &res,vector<vector<pair<int,int>>> &dc,vector<int> &occ){
    int hpy=1;
    int fbn=l/bs;
    int lbn=r/bs;
    //cout<<fbn<<" "<<lbn<<" ";
    unordered_map<int,int> mp;
    
    if(fbn==lbn){
        //cout<<"test1";
        for(int i=l;i<=r;i++){
             mp[res[i]]++;
        }
        unordered_map<int,int>::iterator it;
        
        for(it=mp.begin();it!=mp.end();it++){
            if(it->second!=occ[it->first-1]){
                return 0;
            }
        }
        
    }else{
       
        //cout<<"test2";
        for(int i=l;i<(fbn+1)*bs;i++){
            mp[res[i]]++;
        }
    
    
    
    for(int i=fbn+1;i<lbn;i++){
        vector<pair<int,int>> vp = dc[i];
        
        for(int j=0;j<vp.size();j++){
            mp[vp[j].first]+=vp[j].second;
        }
        
    }
    
       
        
        for(int i=lbn*bs;i<=r;i++){
           mp[res[i]]++;
        }
        
         unordered_map<int,int>::iterator it;
        
        for(it=mp.begin();it!=mp.end();it++){
            if(it->second!=occ[it->first-1]){
                return 0;
            }
        }
    }
    
    
    return hpy;
}
 
 
int main(){
 
	// For fast I/O.
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL); 
    
   /* #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif */
    
    int n,m;
    cin>>n>>m;
    
    vector<int> res(n);
    
    for(int i=0;i<n;i++){
        cin>>res[i];
    }
   
    vector<int> occ(m);
    
    for(int i=0;i<m;i++){
        cin>>occ[i];
    }
    
    
    int bs=sqrt(n);
    
    int nb;
    
    if(n%bs==0){
        nb=n/bs;
    }else{
        nb=n/bs+1;
    }
    
    vector<vector<pair<int,int>>> dc;
    
    int k=0;
    while(k<n){
        unordered_map<int,int> mp;
        for(int i=k;i<bs+k;i++){
            if(i<n){
                mp[res[i]]++;
            }
        }
        k+=bs;
        
        unordered_map<int,int>::iterator it;
        vector<pair<int,int>> vp;
        for(it=mp.begin();it!=mp.end();it++){
            vp.push_back(make_pair(it->first,it->second));
        }
        dc.push_back(vp);
    }
    
    int q;
    cin>>q;
    //cout<<"trst";
    while(q--){
        int l,r;
        cin>>l>>r;
        l--;r--;
        cout<<findMin(l,r,bs,res,dc,occ)<<endl;
    }
    
   
 
 
 
return 0; 
}
